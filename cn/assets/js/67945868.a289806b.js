"use strict";(self.webpackChunkpendle_documentation=self.webpackChunkpendle_documentation||[]).push([[1374],{3905:(e,t,a)=>{a.d(t,{Zo:()=>i,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),c=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},i=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),u=c(a),g=r,m=u["".concat(p,".").concat(g)]||u[g]||d[g]||o;return a?n.createElement(m,s(s({ref:t},i),{},{components:a})):n.createElement(m,s({ref:t},i))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,s=new Array(o);s[0]=g;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:r,s[1]=l;for(var c=2;c<o;c++)s[c]=a[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},6882:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const o={hide_table_of_contents:!0},s="PT and YT Trading",l={unversionedId:"Developers/SDK/PTAndYTTrading",id:"Developers/SDK/PTAndYTTrading",title:"PT and YT Trading",description:"Trading PT",source:"@site/docs/Developers/SDK/PTAndYTTrading.md",sourceDirName:"Developers/SDK",slug:"/Developers/SDK/PTAndYTTrading",permalink:"/cn/Developers/SDK/PTAndYTTrading",draft:!1,tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"myAutogeneratedSidebar",previous:{title:"Adding and Removing Liquidity",permalink:"/cn/Developers/SDK/AddingAndRemovingLiquidity"},next:{title:"Advanced Operations using the SDK",permalink:"/cn/Developers/SDK/AdvancedSDKOps"}},p={},c=[{value:"Trading PT",id:"trading-pt",level:2},{value:"Step 1. Verify your balances before zapping",id:"step-1-verify-your-balances-before-zapping",level:4},{value:"Step 2. Approve the router",id:"step-2-approve-the-router",level:4},{value:"Step 3. Initiate a transaction",id:"step-3-initiate-a-transaction",level:4},{value:"Step 4. Verify your balances after buying PT",id:"step-4-verify-your-balances-after-buying-pt",level:4},{value:"Trading YT",id:"trading-yt",level:2},{value:"Step 1. Verify your balances before zapping",id:"step-1-verify-your-balances-before-zapping-1",level:4},{value:"Step 2. Approve the router",id:"step-2-approve-the-router-1",level:4},{value:"Step 3. Initiate a transaction",id:"step-3-initiate-a-transaction-1",level:4},{value:"Step 4. Verify your balances after buying YT",id:"step-4-verify-your-balances-after-buying-yt",level:4}],i={toc:c},u="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},i,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"pt-and-yt-trading"},"PT and YT Trading"),(0,r.kt)("h2",{id:"trading-pt"},"Trading PT"),(0,r.kt)("p",null,"Suppose that we want to buy PT in the ",(0,r.kt)("a",{parentName:"p",href:"https://app.pendle.finance/pro/markets/0x30e0dc9a1d33eac83211a1113de238b3ce826950/swap?view=pt&chain=ethereum"},"Stargate-USDT pool")," with 10 USDT."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { toAddress, BN, ERC20Entity } from '@pendle/sdk-v2';\nconst marketAddress = toAddress('0x30e0dc9a1d33eac83211a1113de238b3ce826950');\n\nconst usdtContract = new ERC20Entity(toAddress('0xdAC17F958D2ee523a2206206994597C13D831ec7'), {\n    provider,\n    signer: testAccounts[0].wallet,\n});\nconst USDT_DECIMALS = BN.from(10).pow(await usdtContract.decimals());\nconst amountUSDT = USDT_DECIMALS.mul(10);\n")),(0,r.kt)("p",null,"Here is how we can do it:"),(0,r.kt)("h4",{id:"step-1-verify-your-balances-before-zapping"},"Step 1. Verify your balances before zapping"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { MarketEntity } from '@pendle/sdk-v2';\nconst marketContact = new MarketEntity(marketAddress, {\n    chainId: 1,\n    provider,\n    signer: testAccounts[0].wallet,\n});\nconst ptContract = await marketContact.ptEntity();\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"{\n    const ptBalance = await ptContract.balanceOf(testAccounts[0].address);\n    const usdtBalance = await usdtContract.balanceOf(testAccounts[0].address);\n    console.log('Balances before buying PT', { ptBalance, usdtBalance });\n}\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'Balances before buying PT {\n  ptBalance: BigNumber { value: "10376940" },\n  usdtBalance: BigNumber { value: "1000000000" }\n}\n')),(0,r.kt)("h4",{id:"step-2-approve-the-router"},"Step 2. Approve the router"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"await usdtContract.approve(router.address, amountUSDT).then((tx) => tx.wait());\nconsole.log(\n    'Approved amount:',\n    await usdtContract.allowance(testAccounts[0].address, router.address)\n);\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'Approved amount: BigNumber { value: "10000000" }\n')),(0,r.kt)("h4",{id:"step-3-initiate-a-transaction"},"Step 3. Initiate a transaction"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const slippage = 0.2 / 100;\nconst tokenInAddress = usdtContract.address;\nconst amountTokenInToSwap = amountUSDT;\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const buyPtTx = await router.swapExactTokenForPt(\n    marketAddress,\n    tokenInAddress,\n    amountTokenInToSwap,\n    slippage\n);\n\nawait buyPtTx.wait();\n")),(0,r.kt)("h4",{id:"step-4-verify-your-balances-after-buying-pt"},"Step 4. Verify your balances after buying PT"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"{\n    const ptBalance = await ptContract.balanceOf(testAccounts[0].address);\n    const usdtBalance = await usdtContract.balanceOf(testAccounts[0].address);\n    console.log('Balances after buying PT', { ptBalance, usdtBalance });\n}\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'Balances after buying PT {\n  ptBalance: BigNumber { value: "20754229" },\n  usdtBalance: BigNumber { value: "990000000" }\n}\n')),(0,r.kt)("h2",{id:"trading-yt"},"Trading YT"),(0,r.kt)("p",null,"Suppose that we want to buy YT in the ",(0,r.kt)("a",{parentName:"p",href:"https://app.pendle.finance/pro/markets/0x30e0dc9a1d33eac83211a1113de238b3ce826950/swap?view=pt&chain=ethereum"},"Stragate-USDT pool")," with 10 USDT. That is, in the same market, with the same parameters."),(0,r.kt)("p",null,"Here is how we can do it:"),(0,r.kt)("h4",{id:"step-1-verify-your-balances-before-zapping-1"},"Step 1. Verify your balances before zapping"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const ytContract = await marketContact.ytEntity();\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"{\n    const ytBalance = await ytContract.balanceOf(testAccounts[0].address);\n    const usdtBalance = await usdtContract.balanceOf(testAccounts[0].address);\n    console.log('Balances before buying YT', { ytBalance, usdtBalance });\n}\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'Balances before buying YT {\n  ytBalance: BigNumber { value: "260774790" },\n  usdtBalance: BigNumber { value: "990000000" }\n}\n')),(0,r.kt)("h4",{id:"step-2-approve-the-router-1"},"Step 2. Approve the router"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"await usdtContract.approve(router.address, amountUSDT).then((tx) => tx.wait());\nconsole.log(\n    'Approved amount:',\n    await usdtContract.allowance(testAccounts[0].address, router.address)\n);\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'Approved amount: BigNumber { value: "10000000" }\n')),(0,r.kt)("h4",{id:"step-3-initiate-a-transaction-1"},"Step 3. Initiate a transaction"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const buyYtTx = await router.swapExactTokenForYt(\n    marketAddress,\n    tokenInAddress,\n    amountTokenInToSwap,\n    slippage\n);\n\nawait buyYtTx.wait();\n")),(0,r.kt)("h4",{id:"step-4-verify-your-balances-after-buying-yt"},"Step 4. Verify your balances after buying YT"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"{\n    const ytBalance = await ytContract.balanceOf(testAccounts[0].address);\n    const usdtBalance = await usdtContract.balanceOf(testAccounts[0].address);\n    console.log('Balances after buying YT', { ytBalance, usdtBalance });\n}\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'Balances after buying YT {\n  ytBalance: BigNumber { value: "521475959" },\n  usdtBalance: BigNumber { value: "980000000" }\n}\n')))}d.isMDXComponent=!0}}]);